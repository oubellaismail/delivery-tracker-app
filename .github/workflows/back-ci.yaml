name: CI Backend

on:
  push:
    branches: ["**"]
    paths:
      - 'back/**'
      - '.github/workflows/back-ci.yaml'
  pull_request:
    branches:
      - main
    paths:
      - 'back/**'

permissions:
  contents: write
  pull-requests: write
  security-events: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Build Spring Boot app
        run: ./mvnw clean install
        working-directory: ./back

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Run Tests and Generate JaCoCo Report
        run: ./mvnw test
        working-directory: ./back
      - name: Upload JaCoCo Coverage Report
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: back/target/site/jacoco

  security-scans:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
  
      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
  
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
  
      - name: Run Gitleaks (Secrets Detection)
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Run OWASP Dependency-Check (SCA)
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: /opt/jdk
        id: depcheck
        with:
          project: 'test'
          path: './back'
          format: 'HTML,SARIF'
          out: 'reports'
          args: >
            --failOnCVSS 7
            --enableRetired
  
      - name: Upload Dependency-Check reports
        uses: actions/upload-artifact@v4
        with:
          name: Dependency-Check Reports
          path: reports/
  
      - name: Upload SARIF report
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: ${{ github.workspace }}/reports/dependency-check-report.sarif
  
      - name: Run Semgrep (SAST)
        uses: returntocorp/semgrep-action@v1
        with:
          publishToken: ${{ secrets.SEMGREP_TOKEN }}
          config: 'p/ci'
  
  
  build-and-push-docker:
    needs: [build, test, security-scans]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./back
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/spring-boot-backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max