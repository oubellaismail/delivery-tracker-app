name: CI Frontend

on:
  push:
    branches: ["**"]
    paths:
      - 'front/**'
      - '.github/workflows/**'
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Debug - Check package.json
        working-directory: front
        run: |
          echo "=== Checking package.json ==="
          cat package.json | grep -A5 -B5 "react-router-dom" || echo "react-router-dom not found in package.json"
          
      - name: Debug - Check if package-lock.json exists
        working-directory: front
        run: |
          echo "=== Checking package-lock.json ==="
          if [ -f "package-lock.json" ]; then
            echo "package-lock.json exists"
            ls -la package-lock.json
          else
            echo "package-lock.json does not exist"
          fi

      - name: Install dependencies
        working-directory: front
        run: |
          echo "=== Cleaning and installing ==="
          rm -rf node_modules 
          npm install
          
      - name: Debug - Verify installation
        working-directory: front
        run: |
          echo "=== Checking installed packages ==="
          npm list react-router-dom || echo "react-router-dom not installed"
          echo "=== Checking node_modules ==="
          ls -la node_modules/ | grep react-router || echo "No react-router found in node_modules"
          echo "=== Checking if react-router-dom directory exists ==="
          if [ -d "node_modules/react-router-dom" ]; then
            echo "react-router-dom directory exists"
            ls -la node_modules/react-router-dom/
          else
            echo "react-router-dom directory does not exist"
          fi

      - name: Debug - Check missing files
        working-directory: front
        run: |
          echo "=== Checking for missing context files ==="
          find src -name "*.js" -o -name "*.jsx" -o -name "*.ts" -o -name "*.tsx" | head -20
          
      - name: Run tests
        working-directory: front
        run: npm test -- --watchAll=false

      - name: Build app
        working-directory: front
        run: npm run build

      - name: Build Docker image
        run: docker build -t frontend-app:latest -f front/Dockerfile front

      - name: Save Docker image as artifact 
        uses: actions/upload-artifact@v4
        with:
          name: frontend-image
          path: |
            $(docker save frontend-app:latest | gzip > frontend-app.tar.gz)