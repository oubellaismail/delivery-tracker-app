name: Generate OpenAPI Docs

on:
  workflow_run:
    workflows: ["CI Backend"]
    types:
      - completed
    branches:
      - main # Only run this on main branch completions

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Pull Docker image and get SHA
        run: |
          GITHUB_SHA=$(curl -s "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}/jobs" | jq '.jobs[] | select(.name == "build-and-push-docker") | .steps[] | select(.name == "Build and Push Docker Image") | .name' | grep -oE '[0-9a-f]{40}')
          echo "IMAGE_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
          docker pull ghcr.io/${{ github.repository_owner }}/spring-boot-backend:${GITHUB_SHA}
      
      - name: Start backend container
        run: |
          docker run -d --name spring-boot-app \
            -p 8080:8080 \
            -e POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
            -e POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
            -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
            -e APP_USER_USERNAME=${{ secrets.APP_USER_USERNAME }} \
            -e APP_USER_PASSWORD=${{ secrets.APP_USER_PASSWORD }} \
            -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
            ghcr.io/${{ github.repository_owner }}/spring-boot-backend:${{ env.IMAGE_SHA }}

      - name: Wait for Spring Boot app to be ready
        run: |
          ATTEMPTS=0
          MAX_ATTEMPTS=60
          SLEEP_TIME=2
          while [ $ATTEMPTS -lt $MAX_ATTEMPTS ]; do
            if curl -s http://localhost:8080/actuator/health | grep -q '"status":"UP"'; then
              echo "Spring Boot app is ready!"
              break
            fi
            echo "Waiting for Spring Boot app... Attempt $((ATTEMPTS+1)) of $MAX_ATTEMPTS"
            sleep $SLEEP_TIME
            ATTEMPTS=$((ATTEMPTS+1))
          done

          if [ $ATTEMPTS -eq $MAX_ATTEMPTS ]; then
            echo "Spring Boot app did not become ready in time."
            docker logs spring-boot-app
            exit 1
          fi

      - name: Export OpenAPI YAML
        run: curl -s http://localhost:8080/v3/api-docs.yaml -o ./.github/workflows/swagger-ui/openapi.yaml

      - name: Set up Node.js for linting tools
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Lint with Redocly CLI
        run: |
          npm install @redocly/cli
          npx redocly lint ./.github/workflows/swagger-ui/openapi.yaml

      - name: Deploy Swagger UI to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: success()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./.github/workflows/swagger-ui
          publish_branch: gh-pages