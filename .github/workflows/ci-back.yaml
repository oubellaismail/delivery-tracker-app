name: CI Backend
on:
  push:
    branches: ["**"]
    paths:
      - 'back/**'
      - '.github/workflows/**'
  pull_request:
    branches:
      - main
    paths:
      - 'back/**'

permissions:
  contents: write
  pull-requests: write
  security-events: write
  actions: write 

jobs:
  # Build the Spring Boot application
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Build Spring Boot app
        run: ./mvnw clean install
        working-directory: ./back
  
  # Run unit tests
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Run Tests and Generate JaCoCo Report
        run: ./mvnw test
        working-directory: ./back
      - name: Upload JaCoCo Coverage Report
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: back/target/site/jacoco

  # Build and push Docker image
  build-and-push-docker:
    needs: [build, test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./back
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/spring-boot-backend:staging
          cache-from: type=gha
          cache-to: type=gha,mode=max